= アジャイルな案件を受託する組織職の一事例

//flushright{
福田朋紀(@chinmo)
//}

僕はもう長いこと、受託開発の会社で、開発組織の組織職として働いていることになる。

うちの会社には営業がいないので、仕事を取ってくるのも僕の仕事だ。仕事を取ってきたら、部下に担当してもらう。以上。

あらためて文章にしてみると、あまりにあっさりしていて、虚しさすら覚えるけれど、存外、僕はこの日々を楽しんでいる。その秘密は、”アジャイル”にあるんだ。

== アジャイルという制約

@<strong>{アジャイルに関する仕事しかしない。}

これはね、もう「そうすることに決めちゃった」としか言いようがない。色々理屈はつけられるのだけど、そういった建前とか建て付けとは別にして、僕はもうそういう仕事しかしないし、周りにもきっとそうに違いないと思われている。周囲にそう考えてもらうまでには随分長い時間がかかったけど、一度そうなってしまえば、誰も僕に口を挟むことは無くなり、それどころかそういった仕事は最初に僕に回してくれるようになった。

制約は、平凡な世界に刺激的な視点を提供し、一挙手一投足に、そうせざるを得ない理由を生む。結果として、僕という存在が、あるメッセージを周囲に受け取らせることになる。「あいつと関わると、好むと好まざるとに関わらず、アジャイルとやらに向き合わざるを得なくなる」というわけだ。

アジャイルな仕事がなかなかなくて、と嘯く組織職がいたとして、その人はつまるところ、「そうすること」にしていないだけなのだと思う。例えば僕の最初のアジャイルな仕事は、誰に求められたものでもなく、自分で提案したものだった。

アジャイルが向いていない、と誰かが考えている仕事があるとして、僕が「そうであること」をやめるかというとそんなことは一切ない。自分を曲げてまで何かに取り組むほど、勿体無い時間の使い方は無いじゃないか。それがソフトウェア開発であり、世の中に何かの価値を生み出すことを狙っているのなら、それは十分に複雑(Complex)で、アジャイルな自分はしっかりきっちりお役に立てるはずだ、というのが「そうすることにした」僕の揺るがないスタンスなのだ。はっはっは。

== しかし部下はそうじゃない

アジャイルであることは自分で決めたことだけど、ただ、部下はそうじゃない。たまたま、すっとんきょうな事を言っては周囲と波風を立てる奴の下につくことになっただけだ。ご愁傷様です。

別のところに行きたくなったらいつでもどこに行っても良いのだよと言ってみたところで、僕たち日本人は相当な条件が揃わない限りブツブツモヤモヤグチグチしながらもそこに留まり陰鬱な雰囲気づくりに貢献しがちなわけだ。となると組織職としてできることは、

@<strong>{我々の「旅」が、そこそこ趣に満ちている}事を目指すしかない。

お互い、楽しい！とか、やりがいがあるとか、そんな少年の様な爽やかなことが言える歳でもない。でもまあ、老後にポツポツと思い出しては人に話して聞かせたり、公園のベンチでフッ、とニヤついたりする様なことを体験してもらいたい。

== 苛烈な戦場で組織職ができること

ふと振り返った時に、何らかのポジティブな記憶を呼び起こす仕事を体験してもらいたい、というのが偽らざる思いではあるのだが、僕の部署のメンバーとして僕が取ってきた仕事を担当するということは、極めて困難な仕事に挑むことを意味している。

例えば、仕様が決まっていない、要求が曖昧、日程感がバグっている、顧客も課題も解決策もマーケットもフィットしてない、やりたいことに対して金が足りない、そもそもどうしたら悩みが解決するのかわからない、とにかく助けてほしい、この難局を乗り越えるための方法がアジャイルと聞いてここに来ました、などなど、霊媒師も頭を抱える様な危険な案件ばかりだからだ。

勝ち馬に乗るような仕事が無い、ということは、案件として担当するほぼ全てのプロダクト/サービスが、奮闘虚しく市場価値や問題の解決策を生み出せずに消滅する事を意味する。なんと、基本、負け戦前提なのだ！！

不安に苛まれ、それ聞いちゃダメだろ、みたいな問いを投げかけ、利害関係者と衝突し、本気度合いのギャップに苛つき、形ばかりの作業に反対し、無茶苦茶なスケジュールに意を唱え、KPIの無い機能リリースロードマップを蹴り飛ばし、サポートへのクレームやネット上のバッシングに耐え、最後には人員削減や開発チームの解体を経て、サービス終了の屈辱に耐えながら少人数でのクロージング作業に従事する...そんな仕事したい奴なんているだろうか。

そしてそんな過酷な現場に放り込まれる部下たちに対して、他人のサラリーマン人生にそれなりに大きな影響を与える仕事を選択した組織職にできることとは、一体、何だろうか？

=== 誰よりも楽しむ

目の前に広がるのが混沌とした戦場だとして、立ち尽くす部下たちの後ろから飛び出してきて「はいはい、盛り上がってますな！大好物です！」と真っ先に手を挙げて首を突っ込み、問題の構造を発見する度に小躍りし、何を面白いと思っているのかを目をグルグルさせながらメンバーに話し、「絶対面白いから楽しんでおいで！」と送り出す、それが組織職の最初の仕事だと思っている。

面白そうだからやってみようぜ、と口説いている風には見えるが実際には上司部下の関係だ、任命しているに過ぎない。ただ、自分の熱意を相手にウザめに伝え、あわよくば相手の心に小さな火を灯したいのだ。

=== コンディションこそ全て

残業という概念を、自分の中から消そう。

部下の最高のパフォーマンスは、ポジティブな精神から生まれる。そのためには睡眠だ。部下は定時で家に帰っても、睡眠時間を削って何かしているかもしれないが、それは彼らの自由であり、組織職が彼らの睡眠時間を削って良い理由にはならない。

労働基準法ギリギリで部下の稼働を見事に回した経験があるなら、当たり前だが残業なしでも余裕で回せる。それだけで、部下のパフォーマンスは飛躍的に向上する。

ステークホルダーに残業してくれと言われても断ると良い。断れるか！と思うかもしれないが、普通に断れる。断ろう。当然、そのようなことを言われないように事前にさまざまな手を打っておくのがスマートだ。しかし覚えておいて欲しい。残業して稼ぐ一瞬の進捗は、リフレッシュした状態でやる場合よりも品質が低く、次のスプリントどころか翌日あっという間に取り返せる程度のものだ。

部下からもっと働きたい、とか言われることもある。そういう時は、その元気があるなら勉強して腕を上げて、同一時間で多くの成果を挙げられるようになって給与を上げるかもっと給与もらえるところに行けるようになれ、残業すると利益が下がるから君の評価も下がるぞ、と答えよう。

新人なら1年、ベテランでも3年くらいそうしていたら、定時になるとスッとチャットからいなくなってくれる。たまに残ってる奴は仲間ともうちょっとだけお喋りしたい勢だ。

=== 仕事に学習を組み込む

契約の中に、この開発チームは業務を遂行するために必要な学習を行う、ということを織り込もう。と言っても当たり前だけど。仕事上でわからないことがあれば学ばなければならない。ソフトウェア開発は、サービス開発は、価値の創出は、事業の創造は、すべて日々の学びの繰り返しだ。

仕事中に学ぶ、まあそうだよね、と思うかもしれない。しかしもう一歩踏み込んで、部下に、「就業時間中に積極的に勉強会やトレーニングをしよう、できれば毎日やろう。勉強会や研修や、カンファレンス参加や、社会貢献活動に費やす時間以外で、自分達の計画をし、ステークホルダーとコミットし、ソフトウェアを作ろう」と言うとしたらどうだろう。最初、部下は戸惑うはずだ。

しかし、日々学び、学びを継続することを求めることで学びの習慣をつけてもらうことが、彼らを自身に溢れるポジティブなエンジニア集団に変えていく。

　指すは、3-4時間集中してプログラミングしたら、契約分の成果を挙げるチームだ。あとは学びを深めたり、他者を助けたり、雑談しているのが理想だ。継続していけば、そのうち、少々要領が良いくらいのエンジニアでは追いつけないレベルの実力とチームワークがあるチームになると信じてやっている。

== まとめ

アジャイルな案件を受託するなら、覚悟を決めて困難を楽しみ、部下の最高のパフォーマンスを引き出すことに集中し、責任を引き受けて学習に投資しよう。

大丈夫、誰も死なないし、@<strong>{責任は組織職が取ればよい}のだから。

　

//embed{
    \begin{minipage}{.1\linewidth}
        \centering
        \includegraphics[width=.75\linewidth]{images/chap-chinmo/chinmo.png}
    \end{minipage}
    \begin{minipage}{.89\linewidth}
        福田 朋紀 @chinmo https://twitter.com/chinmo\\
        \end{minipage}
    \hspace{1ex}
//}

リコーITソリューションズ株式会社のアジャイル推し。アジャイル鳥取、JISAアジャイル開発G、CoderDojo鳥取チャンピオン、演劇企画夢Ores、TRPGのキャリアが一番長くて30年以上
